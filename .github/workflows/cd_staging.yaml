name: Register flows (staging)

on:
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/cd_staging.yaml"
      - "pipelines/**/*"
      - "pyproject.toml"
      - "Dockerfile"

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GH_PAT: ${{ secrets.GH_PAT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  IMAGE_NAME: ghcr.io/prefeitura-rio/prefect-flows
  PREFECT__BACKEND: cloud
  PREFECT__CLOUD__API: https://prefect.dados.rio/api
  PREFECT__CLOUD__PORT: 443
  PREFECT__SERVER__PROJECT: ${{ secrets.PREFECT__SERVER__PROJECT__STAGING }}
  PREFECT_AUTH_TOML: ${{ secrets.PREFECT_AUTH_TOML }}

jobs:
  build-container:
    if: startsWith(github.head_ref, 'staging/')
    name: Register flows (staging)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python version
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Install Python dependencies for deploying
        run: |-
          pip install -r requirements-deploy.txt

      - name: Update image tag in constants
        run: |-
          python .github/workflows/scripts/replace_docker_tag.py $IMAGE_NAME $GITHUB_SHA

      - name: Install package locally
        run: |-
          pip install .

      - name: Install GDAL for osgeo deps
        run: |
          curl -sSLo ./GDAL-3.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl https://sourceforge.net/projects/gdal-wheels-for-linux/files/GDAL-3.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl/download
          python -m pip install --no-cache-dir ./GDAL-3.4.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl

      - name: Get changed files for code tree analysis
        id: files
        uses: Ana06/get-changed-files@v2.1.0

      - name: Perform code tree analysis
        id: code-tree-analysis
        continue-on-error: true
        run: |
          python .github/workflows/scripts/code_tree_analysis.py "${{ steps.files.outputs.all }}" --write-to-file

      - name: Write auth.toml
        run: |-
          mkdir -p $HOME/.prefect
          echo $PREFECT_AUTH_TOML | base64 --decode > $HOME/.prefect/auth.toml

      - name: Wait for Docker image to be available
        uses: lewagon/wait-on-check-action@v1.1.2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: 'Build Docker image'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          verbose: true

      - name: Register Prefect flows
        run: |-
          python .github/workflows/scripts/register_flows.py --project $PREFECT__SERVER__PROJECT --path pipelines/ --no-schedule --filter-affected-flows
